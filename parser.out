Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    ARR_OPEN
    EQUALS
    ELSE
    IF
    AND
    ARR_CLOSE
    OR

Grammar

Rule 0     S' -> module
Rule 1     module -> MODULO ID body
Rule 2     body -> BRACE_OPEN lines BRACE_CLOSE
Rule 3     lines -> line lines
Rule 4     lines -> line
Rule 5     line -> assign SEMICOLON
Rule 6     line -> declare SEMICOLON
Rule 7     line -> print SEMICOLON
Rule 8     print -> PRINT expr
Rule 9     declare -> type identifier
Rule 10    declare -> type assign
Rule 11    type -> INT_TYPE
Rule 12    type -> DOUBLE_TYPE
Rule 13    type -> CHAR_TYPE
Rule 14    type -> VOID_TYPE
Rule 15    assign -> identifier ASSIGN expr
Rule 16    expr -> ROUND_OPEN expr ROUND_CLOSE
Rule 17    expr -> expr PLUS term
Rule 18    expr -> expr MINUS term
Rule 19    expr -> term
Rule 20    term -> term TIMES factor
Rule 21    term -> term DIVIDE factor
Rule 22    term -> factor
Rule 23    factor -> INT
Rule 24    factor -> DOUBLE
Rule 25    factor -> identifier
Rule 26    factor -> expr
Rule 27    identifier -> ID
Rule 28    expr -> MINUS expr
Rule 29    empty -> <empty>

Terminals, with rules where they appear

AND                  : 
ARR_CLOSE            : 
ARR_OPEN             : 
ASSIGN               : 15
BRACE_CLOSE          : 2
BRACE_OPEN           : 2
CHAR_TYPE            : 13
DIVIDE               : 21
DOUBLE               : 24
DOUBLE_TYPE          : 12
ELSE                 : 
EQUALS               : 
ID                   : 1 27
IF                   : 
INT                  : 23
INT_TYPE             : 11
MINUS                : 18 28
MODULO               : 1
OR                   : 
PLUS                 : 17
PRINT                : 8
ROUND_CLOSE          : 16
ROUND_OPEN           : 16
SEMICOLON            : 5 6 7
TIMES                : 20
VOID_TYPE            : 14
error                : 

Nonterminals, with rules where they appear

assign               : 5 10
body                 : 1
declare              : 6
empty                : 
expr                 : 8 15 16 17 18 26 28
factor               : 20 21 22
identifier           : 9 15 25
line                 : 3 4
lines                : 2 3
module               : 0
print                : 7
term                 : 17 18 19 20 21
type                 : 9 10

Parsing method: LALR

state 0

    (0) S' -> . module
    (1) module -> . MODULO ID body

    MODULO          shift and go to state 1

    module                         shift and go to state 2

state 1

    (1) module -> MODULO . ID body

    ID              shift and go to state 3


state 2

    (0) S' -> module .



state 3

    (1) module -> MODULO ID . body
    (2) body -> . BRACE_OPEN lines BRACE_CLOSE

    BRACE_OPEN      shift and go to state 5

    body                           shift and go to state 4

state 4

    (1) module -> MODULO ID body .

    $end            reduce using rule 1 (module -> MODULO ID body .)


state 5

    (2) body -> BRACE_OPEN . lines BRACE_CLOSE
    (3) lines -> . line lines
    (4) lines -> . line
    (5) line -> . assign SEMICOLON
    (6) line -> . declare SEMICOLON
    (7) line -> . print SEMICOLON
    (15) assign -> . identifier ASSIGN expr
    (9) declare -> . type identifier
    (10) declare -> . type assign
    (8) print -> . PRINT expr
    (27) identifier -> . ID
    (11) type -> . INT_TYPE
    (12) type -> . DOUBLE_TYPE
    (13) type -> . CHAR_TYPE
    (14) type -> . VOID_TYPE

    PRINT           shift and go to state 12
    ID              shift and go to state 14
    INT_TYPE        shift and go to state 9
    DOUBLE_TYPE     shift and go to state 13
    CHAR_TYPE       shift and go to state 6
    VOID_TYPE       shift and go to state 8

    lines                          shift and go to state 10
    declare                        shift and go to state 11
    print                          shift and go to state 15
    line                           shift and go to state 16
    identifier                     shift and go to state 7
    type                           shift and go to state 17
    assign                         shift and go to state 18

state 6

    (13) type -> CHAR_TYPE .

    ID              reduce using rule 13 (type -> CHAR_TYPE .)


state 7

    (15) assign -> identifier . ASSIGN expr

    ASSIGN          shift and go to state 19


state 8

    (14) type -> VOID_TYPE .

    ID              reduce using rule 14 (type -> VOID_TYPE .)


state 9

    (11) type -> INT_TYPE .

    ID              reduce using rule 11 (type -> INT_TYPE .)


state 10

    (2) body -> BRACE_OPEN lines . BRACE_CLOSE

    BRACE_CLOSE     shift and go to state 20


state 11

    (6) line -> declare . SEMICOLON

    SEMICOLON       shift and go to state 21


state 12

    (8) print -> PRINT . expr
    (16) expr -> . ROUND_OPEN expr ROUND_CLOSE
    (17) expr -> . expr PLUS term
    (18) expr -> . expr MINUS term
    (19) expr -> . term
    (28) expr -> . MINUS expr
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . INT
    (24) factor -> . DOUBLE
    (25) factor -> . identifier
    (26) factor -> . expr
    (27) identifier -> . ID

    ROUND_OPEN      shift and go to state 27
    MINUS           shift and go to state 29
    INT             shift and go to state 24
    DOUBLE          shift and go to state 23
    ID              shift and go to state 14

    expr                           shift and go to state 25
    term                           shift and go to state 22
    identifier                     shift and go to state 28
    factor                         shift and go to state 26

state 13

    (12) type -> DOUBLE_TYPE .

    ID              reduce using rule 12 (type -> DOUBLE_TYPE .)


state 14

    (27) identifier -> ID .

    ROUND_CLOSE     reduce using rule 27 (identifier -> ID .)
    PLUS            reduce using rule 27 (identifier -> ID .)
    MINUS           reduce using rule 27 (identifier -> ID .)
    TIMES           reduce using rule 27 (identifier -> ID .)
    DIVIDE          reduce using rule 27 (identifier -> ID .)
    SEMICOLON       reduce using rule 27 (identifier -> ID .)
    ASSIGN          reduce using rule 27 (identifier -> ID .)


state 15

    (7) line -> print . SEMICOLON

    SEMICOLON       shift and go to state 30


state 16

    (3) lines -> line . lines
    (4) lines -> line .
    (3) lines -> . line lines
    (4) lines -> . line
    (5) line -> . assign SEMICOLON
    (6) line -> . declare SEMICOLON
    (7) line -> . print SEMICOLON
    (15) assign -> . identifier ASSIGN expr
    (9) declare -> . type identifier
    (10) declare -> . type assign
    (8) print -> . PRINT expr
    (27) identifier -> . ID
    (11) type -> . INT_TYPE
    (12) type -> . DOUBLE_TYPE
    (13) type -> . CHAR_TYPE
    (14) type -> . VOID_TYPE

    BRACE_CLOSE     reduce using rule 4 (lines -> line .)
    PRINT           shift and go to state 12
    ID              shift and go to state 14
    INT_TYPE        shift and go to state 9
    DOUBLE_TYPE     shift and go to state 13
    CHAR_TYPE       shift and go to state 6
    VOID_TYPE       shift and go to state 8

    lines                          shift and go to state 31
    declare                        shift and go to state 11
    print                          shift and go to state 15
    line                           shift and go to state 16
    identifier                     shift and go to state 7
    type                           shift and go to state 17
    assign                         shift and go to state 18

state 17

    (9) declare -> type . identifier
    (10) declare -> type . assign
    (27) identifier -> . ID
    (15) assign -> . identifier ASSIGN expr

    ID              shift and go to state 14

    identifier                     shift and go to state 33
    assign                         shift and go to state 32

state 18

    (5) line -> assign . SEMICOLON

    SEMICOLON       shift and go to state 34


state 19

    (15) assign -> identifier ASSIGN . expr
    (16) expr -> . ROUND_OPEN expr ROUND_CLOSE
    (17) expr -> . expr PLUS term
    (18) expr -> . expr MINUS term
    (19) expr -> . term
    (28) expr -> . MINUS expr
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . INT
    (24) factor -> . DOUBLE
    (25) factor -> . identifier
    (26) factor -> . expr
    (27) identifier -> . ID

    ROUND_OPEN      shift and go to state 27
    MINUS           shift and go to state 29
    INT             shift and go to state 24
    DOUBLE          shift and go to state 23
    ID              shift and go to state 14

    expr                           shift and go to state 35
    term                           shift and go to state 22
    identifier                     shift and go to state 28
    factor                         shift and go to state 26

state 20

    (2) body -> BRACE_OPEN lines BRACE_CLOSE .

    $end            reduce using rule 2 (body -> BRACE_OPEN lines BRACE_CLOSE .)


state 21

    (6) line -> declare SEMICOLON .

    PRINT           reduce using rule 6 (line -> declare SEMICOLON .)
    ID              reduce using rule 6 (line -> declare SEMICOLON .)
    INT_TYPE        reduce using rule 6 (line -> declare SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 6 (line -> declare SEMICOLON .)
    CHAR_TYPE       reduce using rule 6 (line -> declare SEMICOLON .)
    VOID_TYPE       reduce using rule 6 (line -> declare SEMICOLON .)
    BRACE_CLOSE     reduce using rule 6 (line -> declare SEMICOLON .)


state 22

    (19) expr -> term .
    (20) term -> term . TIMES factor
    (21) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 19 (expr -> term .)
    MINUS           reduce using rule 19 (expr -> term .)
    SEMICOLON       reduce using rule 19 (expr -> term .)
    ROUND_CLOSE     reduce using rule 19 (expr -> term .)
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 36

  ! TIMES           [ reduce using rule 19 (expr -> term .) ]
  ! DIVIDE          [ reduce using rule 19 (expr -> term .) ]


state 23

    (24) factor -> DOUBLE .

    PLUS            reduce using rule 24 (factor -> DOUBLE .)
    MINUS           reduce using rule 24 (factor -> DOUBLE .)
    SEMICOLON       reduce using rule 24 (factor -> DOUBLE .)
    TIMES           reduce using rule 24 (factor -> DOUBLE .)
    DIVIDE          reduce using rule 24 (factor -> DOUBLE .)
    ROUND_CLOSE     reduce using rule 24 (factor -> DOUBLE .)


state 24

    (23) factor -> INT .

    PLUS            reduce using rule 23 (factor -> INT .)
    MINUS           reduce using rule 23 (factor -> INT .)
    SEMICOLON       reduce using rule 23 (factor -> INT .)
    TIMES           reduce using rule 23 (factor -> INT .)
    DIVIDE          reduce using rule 23 (factor -> INT .)
    ROUND_CLOSE     reduce using rule 23 (factor -> INT .)


state 25

    (8) print -> PRINT expr .
    (17) expr -> expr . PLUS term
    (18) expr -> expr . MINUS term
    (26) factor -> expr .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for SEMICOLON resolved using rule 8 (print -> PRINT expr .)
    SEMICOLON       reduce using rule 8 (print -> PRINT expr .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           reduce using rule 26 (factor -> expr .)
    DIVIDE          reduce using rule 26 (factor -> expr .)

  ! PLUS            [ reduce using rule 26 (factor -> expr .) ]
  ! MINUS           [ reduce using rule 26 (factor -> expr .) ]
  ! SEMICOLON       [ reduce using rule 26 (factor -> expr .) ]


state 26

    (22) term -> factor .

    PLUS            reduce using rule 22 (term -> factor .)
    MINUS           reduce using rule 22 (term -> factor .)
    SEMICOLON       reduce using rule 22 (term -> factor .)
    TIMES           reduce using rule 22 (term -> factor .)
    DIVIDE          reduce using rule 22 (term -> factor .)
    ROUND_CLOSE     reduce using rule 22 (term -> factor .)


state 27

    (16) expr -> ROUND_OPEN . expr ROUND_CLOSE
    (16) expr -> . ROUND_OPEN expr ROUND_CLOSE
    (17) expr -> . expr PLUS term
    (18) expr -> . expr MINUS term
    (19) expr -> . term
    (28) expr -> . MINUS expr
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . INT
    (24) factor -> . DOUBLE
    (25) factor -> . identifier
    (26) factor -> . expr
    (27) identifier -> . ID

    ROUND_OPEN      shift and go to state 27
    MINUS           shift and go to state 29
    INT             shift and go to state 24
    DOUBLE          shift and go to state 23
    ID              shift and go to state 14

    expr                           shift and go to state 40
    term                           shift and go to state 22
    identifier                     shift and go to state 28
    factor                         shift and go to state 26

state 28

    (25) factor -> identifier .

    PLUS            reduce using rule 25 (factor -> identifier .)
    MINUS           reduce using rule 25 (factor -> identifier .)
    SEMICOLON       reduce using rule 25 (factor -> identifier .)
    TIMES           reduce using rule 25 (factor -> identifier .)
    DIVIDE          reduce using rule 25 (factor -> identifier .)
    ROUND_CLOSE     reduce using rule 25 (factor -> identifier .)


state 29

    (28) expr -> MINUS . expr
    (16) expr -> . ROUND_OPEN expr ROUND_CLOSE
    (17) expr -> . expr PLUS term
    (18) expr -> . expr MINUS term
    (19) expr -> . term
    (28) expr -> . MINUS expr
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . INT
    (24) factor -> . DOUBLE
    (25) factor -> . identifier
    (26) factor -> . expr
    (27) identifier -> . ID

    ROUND_OPEN      shift and go to state 27
    MINUS           shift and go to state 29
    INT             shift and go to state 24
    DOUBLE          shift and go to state 23
    ID              shift and go to state 14

    expr                           shift and go to state 41
    term                           shift and go to state 22
    identifier                     shift and go to state 28
    factor                         shift and go to state 26

state 30

    (7) line -> print SEMICOLON .

    PRINT           reduce using rule 7 (line -> print SEMICOLON .)
    ID              reduce using rule 7 (line -> print SEMICOLON .)
    INT_TYPE        reduce using rule 7 (line -> print SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 7 (line -> print SEMICOLON .)
    CHAR_TYPE       reduce using rule 7 (line -> print SEMICOLON .)
    VOID_TYPE       reduce using rule 7 (line -> print SEMICOLON .)
    BRACE_CLOSE     reduce using rule 7 (line -> print SEMICOLON .)


state 31

    (3) lines -> line lines .

    BRACE_CLOSE     reduce using rule 3 (lines -> line lines .)


state 32

    (10) declare -> type assign .

    SEMICOLON       reduce using rule 10 (declare -> type assign .)


state 33

    (9) declare -> type identifier .
    (15) assign -> identifier . ASSIGN expr

    SEMICOLON       reduce using rule 9 (declare -> type identifier .)
    ASSIGN          shift and go to state 19


state 34

    (5) line -> assign SEMICOLON .

    PRINT           reduce using rule 5 (line -> assign SEMICOLON .)
    ID              reduce using rule 5 (line -> assign SEMICOLON .)
    INT_TYPE        reduce using rule 5 (line -> assign SEMICOLON .)
    DOUBLE_TYPE     reduce using rule 5 (line -> assign SEMICOLON .)
    CHAR_TYPE       reduce using rule 5 (line -> assign SEMICOLON .)
    VOID_TYPE       reduce using rule 5 (line -> assign SEMICOLON .)
    BRACE_CLOSE     reduce using rule 5 (line -> assign SEMICOLON .)


state 35

    (15) assign -> identifier ASSIGN expr .
    (17) expr -> expr . PLUS term
    (18) expr -> expr . MINUS term
    (26) factor -> expr .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for SEMICOLON resolved using rule 15 (assign -> identifier ASSIGN expr .)
    SEMICOLON       reduce using rule 15 (assign -> identifier ASSIGN expr .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           reduce using rule 26 (factor -> expr .)
    DIVIDE          reduce using rule 26 (factor -> expr .)

  ! PLUS            [ reduce using rule 26 (factor -> expr .) ]
  ! MINUS           [ reduce using rule 26 (factor -> expr .) ]
  ! SEMICOLON       [ reduce using rule 26 (factor -> expr .) ]


state 36

    (21) term -> term DIVIDE . factor
    (23) factor -> . INT
    (24) factor -> . DOUBLE
    (25) factor -> . identifier
    (26) factor -> . expr
    (27) identifier -> . ID
    (16) expr -> . ROUND_OPEN expr ROUND_CLOSE
    (17) expr -> . expr PLUS term
    (18) expr -> . expr MINUS term
    (19) expr -> . term
    (28) expr -> . MINUS expr
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor

    INT             shift and go to state 24
    DOUBLE          shift and go to state 23
    ID              shift and go to state 14
    ROUND_OPEN      shift and go to state 27
    MINUS           shift and go to state 29

    expr                           shift and go to state 42
    term                           shift and go to state 22
    identifier                     shift and go to state 28
    factor                         shift and go to state 43

state 37

    (20) term -> term TIMES . factor
    (23) factor -> . INT
    (24) factor -> . DOUBLE
    (25) factor -> . identifier
    (26) factor -> . expr
    (27) identifier -> . ID
    (16) expr -> . ROUND_OPEN expr ROUND_CLOSE
    (17) expr -> . expr PLUS term
    (18) expr -> . expr MINUS term
    (19) expr -> . term
    (28) expr -> . MINUS expr
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor

    INT             shift and go to state 24
    DOUBLE          shift and go to state 23
    ID              shift and go to state 14
    ROUND_OPEN      shift and go to state 27
    MINUS           shift and go to state 29

    expr                           shift and go to state 42
    term                           shift and go to state 22
    identifier                     shift and go to state 28
    factor                         shift and go to state 44

state 38

    (17) expr -> expr PLUS . term
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . INT
    (24) factor -> . DOUBLE
    (25) factor -> . identifier
    (26) factor -> . expr
    (27) identifier -> . ID
    (16) expr -> . ROUND_OPEN expr ROUND_CLOSE
    (17) expr -> . expr PLUS term
    (18) expr -> . expr MINUS term
    (19) expr -> . term
    (28) expr -> . MINUS expr

    INT             shift and go to state 24
    DOUBLE          shift and go to state 23
    ID              shift and go to state 14
    ROUND_OPEN      shift and go to state 27
    MINUS           shift and go to state 29

    expr                           shift and go to state 42
    term                           shift and go to state 45
    identifier                     shift and go to state 28
    factor                         shift and go to state 26

state 39

    (18) expr -> expr MINUS . term
    (20) term -> . term TIMES factor
    (21) term -> . term DIVIDE factor
    (22) term -> . factor
    (23) factor -> . INT
    (24) factor -> . DOUBLE
    (25) factor -> . identifier
    (26) factor -> . expr
    (27) identifier -> . ID
    (16) expr -> . ROUND_OPEN expr ROUND_CLOSE
    (17) expr -> . expr PLUS term
    (18) expr -> . expr MINUS term
    (19) expr -> . term
    (28) expr -> . MINUS expr

    INT             shift and go to state 24
    DOUBLE          shift and go to state 23
    ID              shift and go to state 14
    ROUND_OPEN      shift and go to state 27
    MINUS           shift and go to state 29

    expr                           shift and go to state 42
    term                           shift and go to state 46
    identifier                     shift and go to state 28
    factor                         shift and go to state 26

state 40

    (16) expr -> ROUND_OPEN expr . ROUND_CLOSE
    (17) expr -> expr . PLUS term
    (18) expr -> expr . MINUS term
    (26) factor -> expr .

  ! shift/reduce conflict for ROUND_CLOSE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    ROUND_CLOSE     shift and go to state 47
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           reduce using rule 26 (factor -> expr .)
    DIVIDE          reduce using rule 26 (factor -> expr .)

  ! ROUND_CLOSE     [ reduce using rule 26 (factor -> expr .) ]
  ! PLUS            [ reduce using rule 26 (factor -> expr .) ]
  ! MINUS           [ reduce using rule 26 (factor -> expr .) ]


state 41

    (28) expr -> MINUS expr .
    (17) expr -> expr . PLUS term
    (18) expr -> expr . MINUS term
    (26) factor -> expr .

  ! reduce/reduce conflict for PLUS resolved using rule 26 (factor -> expr .)
  ! reduce/reduce conflict for MINUS resolved using rule 26 (factor -> expr .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 26 (factor -> expr .)
  ! reduce/reduce conflict for TIMES resolved using rule 26 (factor -> expr .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 26 (factor -> expr .)
  ! reduce/reduce conflict for ROUND_CLOSE resolved using rule 26 (factor -> expr .)
    PLUS            reduce using rule 26 (factor -> expr .)
    MINUS           reduce using rule 26 (factor -> expr .)
    SEMICOLON       reduce using rule 26 (factor -> expr .)
    TIMES           reduce using rule 26 (factor -> expr .)
    DIVIDE          reduce using rule 26 (factor -> expr .)
    ROUND_CLOSE     reduce using rule 26 (factor -> expr .)

  ! PLUS            [ reduce using rule 28 (expr -> MINUS expr .) ]
  ! MINUS           [ reduce using rule 28 (expr -> MINUS expr .) ]
  ! SEMICOLON       [ reduce using rule 28 (expr -> MINUS expr .) ]
  ! TIMES           [ reduce using rule 28 (expr -> MINUS expr .) ]
  ! DIVIDE          [ reduce using rule 28 (expr -> MINUS expr .) ]
  ! ROUND_CLOSE     [ reduce using rule 28 (expr -> MINUS expr .) ]
  ! PLUS            [ shift and go to state 38 ]
  ! MINUS           [ shift and go to state 39 ]


state 42

    (26) factor -> expr .
    (17) expr -> expr . PLUS term
    (18) expr -> expr . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    SEMICOLON       reduce using rule 26 (factor -> expr .)
    TIMES           reduce using rule 26 (factor -> expr .)
    DIVIDE          reduce using rule 26 (factor -> expr .)
    ROUND_CLOSE     reduce using rule 26 (factor -> expr .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39

  ! PLUS            [ reduce using rule 26 (factor -> expr .) ]
  ! MINUS           [ reduce using rule 26 (factor -> expr .) ]


state 43

    (21) term -> term DIVIDE factor .
    (22) term -> factor .

  ! reduce/reduce conflict for PLUS resolved using rule 21 (term -> term DIVIDE factor .)
  ! reduce/reduce conflict for MINUS resolved using rule 21 (term -> term DIVIDE factor .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 21 (term -> term DIVIDE factor .)
  ! reduce/reduce conflict for TIMES resolved using rule 21 (term -> term DIVIDE factor .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 21 (term -> term DIVIDE factor .)
  ! reduce/reduce conflict for ROUND_CLOSE resolved using rule 21 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 21 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 21 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 21 (term -> term DIVIDE factor .)
    TIMES           reduce using rule 21 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 21 (term -> term DIVIDE factor .)
    ROUND_CLOSE     reduce using rule 21 (term -> term DIVIDE factor .)

  ! PLUS            [ reduce using rule 22 (term -> factor .) ]
  ! MINUS           [ reduce using rule 22 (term -> factor .) ]
  ! SEMICOLON       [ reduce using rule 22 (term -> factor .) ]
  ! TIMES           [ reduce using rule 22 (term -> factor .) ]
  ! DIVIDE          [ reduce using rule 22 (term -> factor .) ]
  ! ROUND_CLOSE     [ reduce using rule 22 (term -> factor .) ]


state 44

    (20) term -> term TIMES factor .
    (22) term -> factor .

  ! reduce/reduce conflict for PLUS resolved using rule 20 (term -> term TIMES factor .)
  ! reduce/reduce conflict for MINUS resolved using rule 20 (term -> term TIMES factor .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 20 (term -> term TIMES factor .)
  ! reduce/reduce conflict for TIMES resolved using rule 20 (term -> term TIMES factor .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 20 (term -> term TIMES factor .)
  ! reduce/reduce conflict for ROUND_CLOSE resolved using rule 20 (term -> term TIMES factor .)
    PLUS            reduce using rule 20 (term -> term TIMES factor .)
    MINUS           reduce using rule 20 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 20 (term -> term TIMES factor .)
    TIMES           reduce using rule 20 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 20 (term -> term TIMES factor .)
    ROUND_CLOSE     reduce using rule 20 (term -> term TIMES factor .)

  ! PLUS            [ reduce using rule 22 (term -> factor .) ]
  ! MINUS           [ reduce using rule 22 (term -> factor .) ]
  ! SEMICOLON       [ reduce using rule 22 (term -> factor .) ]
  ! TIMES           [ reduce using rule 22 (term -> factor .) ]
  ! DIVIDE          [ reduce using rule 22 (term -> factor .) ]
  ! ROUND_CLOSE     [ reduce using rule 22 (term -> factor .) ]


state 45

    (17) expr -> expr PLUS term .
    (20) term -> term . TIMES factor
    (21) term -> term . DIVIDE factor
    (19) expr -> term .

  ! reduce/reduce conflict for PLUS resolved using rule 17 (expr -> expr PLUS term .)
  ! reduce/reduce conflict for MINUS resolved using rule 17 (expr -> expr PLUS term .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 17 (expr -> expr PLUS term .)
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! reduce/reduce conflict for ROUND_CLOSE resolved using rule 17 (expr -> expr PLUS term .)
    PLUS            reduce using rule 17 (expr -> expr PLUS term .)
    MINUS           reduce using rule 17 (expr -> expr PLUS term .)
    SEMICOLON       reduce using rule 17 (expr -> expr PLUS term .)
    ROUND_CLOSE     reduce using rule 17 (expr -> expr PLUS term .)
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 36

  ! TIMES           [ reduce using rule 17 (expr -> expr PLUS term .) ]
  ! DIVIDE          [ reduce using rule 17 (expr -> expr PLUS term .) ]
  ! PLUS            [ reduce using rule 19 (expr -> term .) ]
  ! MINUS           [ reduce using rule 19 (expr -> term .) ]
  ! SEMICOLON       [ reduce using rule 19 (expr -> term .) ]
  ! TIMES           [ reduce using rule 19 (expr -> term .) ]
  ! DIVIDE          [ reduce using rule 19 (expr -> term .) ]
  ! ROUND_CLOSE     [ reduce using rule 19 (expr -> term .) ]


state 46

    (18) expr -> expr MINUS term .
    (20) term -> term . TIMES factor
    (21) term -> term . DIVIDE factor
    (19) expr -> term .

  ! reduce/reduce conflict for PLUS resolved using rule 18 (expr -> expr MINUS term .)
  ! reduce/reduce conflict for MINUS resolved using rule 18 (expr -> expr MINUS term .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 18 (expr -> expr MINUS term .)
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! reduce/reduce conflict for ROUND_CLOSE resolved using rule 18 (expr -> expr MINUS term .)
    PLUS            reduce using rule 18 (expr -> expr MINUS term .)
    MINUS           reduce using rule 18 (expr -> expr MINUS term .)
    SEMICOLON       reduce using rule 18 (expr -> expr MINUS term .)
    ROUND_CLOSE     reduce using rule 18 (expr -> expr MINUS term .)
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 36

  ! TIMES           [ reduce using rule 18 (expr -> expr MINUS term .) ]
  ! DIVIDE          [ reduce using rule 18 (expr -> expr MINUS term .) ]
  ! PLUS            [ reduce using rule 19 (expr -> term .) ]
  ! MINUS           [ reduce using rule 19 (expr -> term .) ]
  ! SEMICOLON       [ reduce using rule 19 (expr -> term .) ]
  ! TIMES           [ reduce using rule 19 (expr -> term .) ]
  ! DIVIDE          [ reduce using rule 19 (expr -> term .) ]
  ! ROUND_CLOSE     [ reduce using rule 19 (expr -> term .) ]


state 47

    (16) expr -> ROUND_OPEN expr ROUND_CLOSE .

    PLUS            reduce using rule 16 (expr -> ROUND_OPEN expr ROUND_CLOSE .)
    MINUS           reduce using rule 16 (expr -> ROUND_OPEN expr ROUND_CLOSE .)
    SEMICOLON       reduce using rule 16 (expr -> ROUND_OPEN expr ROUND_CLOSE .)
    TIMES           reduce using rule 16 (expr -> ROUND_OPEN expr ROUND_CLOSE .)
    DIVIDE          reduce using rule 16 (expr -> ROUND_OPEN expr ROUND_CLOSE .)
    ROUND_CLOSE     reduce using rule 16 (expr -> ROUND_OPEN expr ROUND_CLOSE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for TIMES in state 22 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 22 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 25 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 25 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 35 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 35 resolved as shift
WARNING: shift/reduce conflict for ROUND_CLOSE in state 40 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 40 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 40 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 42 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 42 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 45 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 45 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 46 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 46 resolved as shift
WARNING: reduce/reduce conflict in state 25 resolved using rule (print -> PRINT expr)
WARNING: rejected rule (factor -> expr) in state 25
WARNING: reduce/reduce conflict in state 35 resolved using rule (assign -> identifier ASSIGN expr)
WARNING: rejected rule (factor -> expr) in state 35
WARNING: reduce/reduce conflict in state 41 resolved using rule (factor -> expr)
WARNING: rejected rule (expr -> MINUS expr) in state 41
WARNING: reduce/reduce conflict in state 43 resolved using rule (term -> term DIVIDE factor)
WARNING: rejected rule (term -> factor) in state 43
WARNING: reduce/reduce conflict in state 44 resolved using rule (term -> term TIMES factor)
WARNING: rejected rule (term -> factor) in state 44
WARNING: reduce/reduce conflict in state 45 resolved using rule (expr -> expr PLUS term)
WARNING: rejected rule (expr -> term) in state 45
WARNING: reduce/reduce conflict in state 46 resolved using rule (expr -> expr MINUS term)
WARNING: rejected rule (expr -> term) in state 46
WARNING: Rule (expr -> MINUS expr) is never reduced
